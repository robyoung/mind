"""Add latest answer timestamp to User

Revision ID: 006
Revises: 005
Create Date: 2017-10-27 21:26:31.982977

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '006'
down_revision = '005'
branch_labels = None
depends_on = None


user_helper = sa.Table(
    'user',
    sa.MetaData(),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), primary_key=True),
    sa.Column('latest_answer_created_at', sa.DateTime()),
)

answer_helper = sa.Table(
    'answer',
    sa.MetaData(),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True)),
    sa.Column('created_at', sa.DateTime()),
)


def upgrade():
    op.add_column(
        'user',
        sa.Column('latest_answer_created_at', sa.DateTime(), nullable=True)
    )

    connection = op.get_bind()
    user_uuid_column = answer_helper.c.user_uuid
    latest_answers = sa.select([
        user_uuid_column, sa.func.max(answer_helper.c.created_at)
    ]).group_by(user_uuid_column)

    for (user_uuid, created_at) in connection.execute(latest_answers):
        update_user = user_helper \
            .update() \
            .where(user_helper.c.uuid == user_uuid) \
            .values(latest_answer_created_at=created_at)
        connection.execute(update_user)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'latest_answer_created_at')
    # ### end Alembic commands ###
